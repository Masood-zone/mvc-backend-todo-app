<!DOCTYPE html>
<html lang="en" class="h-full">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Error</title>
    <link rel="stylesheet" href="/css/style.css">
    <script src="https://cdn.tailwindcss.com"></script>
</head>
<body class="h-full bg-gray-100 dark:bg-gray-900 flex items-center justify-center transition-colors duration-200">
    <div class="bg-white dark:bg-gray-800 p-8 rounded-lg shadow-md max-w-md w-full">
        <div class="flex justify-between items-center mb-6">
            <h1 class="text-3xl font-bold text-red-600 dark:text-red-400">Error</h1>
            <button id="theme-toggle" class="text-gray-500 dark:text-gray-400">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9.003 9.003 0 008.354-5.646z" />
                </svg>
            </button>
        </div>
        <p class="text-gray-700 dark:text-gray-300 mb-4"><%= message %></p>
        <% if (error.status) { %>
            <p class="text-sm text-gray-500 dark:text-gray-400 mb-2">Status: <%= error.status %></p>
        <% } %>
        <% if (process.env.NODE_ENV === 'development' && error.stack) { %>
            <pre class="bg-gray-100 dark:bg-gray-700 p-4 rounded text-sm overflow-x-auto text-gray-800 dark:text-gray-200"><%= error.stack %></pre>
        <% } %>
        <a href="/" class="mt-6 inline-block bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600 dark:bg-blue-600 dark:hover:bg-blue-700 transition-colors">
            Go back to homepage
        </a>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const themeToggle = document.getElementById('theme-toggle');
            const html = document.documentElement;

            // Check for saved theme preference, otherwise use system preference
            const savedTheme = localStorage.getItem('theme') || 
                (window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light');

            // Apply the initial theme
            if (savedTheme === 'dark') {
                html.classList.add('dark');
                updateThemeIcon(true);
            } else {
                html.classList.remove('dark');
                updateThemeIcon(false);
            }

            themeToggle.addEventListener('click', () => {
                const isDark = html.classList.toggle('dark');
                localStorage.setItem('theme', isDark ? 'dark' : 'light');
                updateThemeIcon(isDark);
            });

            function updateThemeIcon(isDark) {
                themeToggle.innerHTML = isDark
                    ? `<svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z" />
                    </svg>`
                    : `<svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9.003 9.003 0 008.354-5.646z" />
                    </svg>`;
            }
        });
    </script>
</body>
</html>

